{
	"id": "5eae33bccda40e24100e21e4fdbb8973",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"battle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"battleDeclaration.sol\";\n\ncontract Battle {\n    mapping(address => Nft[]) public ownedNfts;\n\n\n    constructor() {\n        ownedNfts[msg.sender].push(Nft(1, NftType.Unit));\n        ownedNfts[msg.sender].push(Nft(1, NftType.Unit));\n        ownedNfts[msg.sender].push(Nft(1, NftType.Unit));\n        ownedNfts[msg.sender].push(Nft(1, NftType.Unit));\n        ownedNfts[msg.sender].push(Nft(1, NftType.Unit));\n    }\n\n    function getNfts() public view returns (Nft[] memory) {\n        return ownedNfts[msg.sender];\n    }\n\n    function applyBattleSquad(uint256[] memory nfts)\n        public\n        view\n        returns (Nft[] memory)\n    {\n        for (uint256 _i = 0; _i < nfts.length; _i++) {}\n        return ownedNfts[msg.sender];\n    }\n}\n"
			},
			"battleDeclaration.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// This is saved 'battleDeclaration.sol'\n\nenum NftType {\n    Unit,\n    Weapon,\n    Helmet\n}\n\nstruct Nft {\n    uint256 id;\n    NftType nftType;\n}\n\nstruct BattleSlot {\n    address owner;\n    Nft[] nftType;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"battle.sol",
								"battleDeclaration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"battle.sol": {
				"Battle": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "nfts",
									"type": "uint256[]"
								}
							],
							"name": "applyBattleSquad",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "enum NftType",
											"name": "nftType",
											"type": "uint8"
										}
									],
									"internalType": "struct Nft[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "enum NftType",
											"name": "nftType",
											"type": "uint8"
										}
									],
									"internalType": "struct Nft[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownedNfts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "enum NftType",
									"name": "nftType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"battle.sol\":143:852  contract Battle {... */\n  mstore(0x40, 0x80)\n    /* \"battle.sol\":215:526  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"battle.sol\":239:248  ownedNfts */\n  0x00\n    /* \"battle.sol\":239:260  ownedNfts[msg.sender] */\n  dup1\n    /* \"battle.sol\":249:259  msg.sender */\n  caller\n    /* \"battle.sol\":239:260  ownedNfts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"battle.sol\":266:286  Nft(1, NftType.Unit) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"battle.sol\":270:271  1 */\n  0x01\n    /* \"battle.sol\":266:286  Nft(1, NftType.Unit) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"battle.sol\":273:285  NftType.Unit */\n  0x00\n    /* \"battle.sol\":266:286  Nft(1, NftType.Unit) */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  dup2\n  mstore\n  pop\n    /* \"battle.sol\":239:287  ownedNfts[msg.sender].push(Nft(1, NftType.Unit)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  tag_9\n  tag_6\n  jump\t// in\ntag_9:\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"battle.sol\":297:306  ownedNfts */\n  0x00\n    /* \"battle.sol\":297:318  ownedNfts[msg.sender] */\n  dup1\n    /* \"battle.sol\":307:317  msg.sender */\n  caller\n    /* \"battle.sol\":297:318  ownedNfts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"battle.sol\":324:344  Nft(1, NftType.Unit) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"battle.sol\":328:329  1 */\n  0x01\n    /* \"battle.sol\":324:344  Nft(1, NftType.Unit) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"battle.sol\":331:343  NftType.Unit */\n  0x00\n    /* \"battle.sol\":324:344  Nft(1, NftType.Unit) */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  tag_11\n  tag_6\n  jump\t// in\ntag_11:\ntag_10:\n  dup2\n  mstore\n  pop\n    /* \"battle.sol\":297:345  ownedNfts[msg.sender].push(Nft(1, NftType.Unit)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_6\n  jump\t// in\ntag_14:\ntag_13:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"battle.sol\":355:364  ownedNfts */\n  0x00\n    /* \"battle.sol\":355:376  ownedNfts[msg.sender] */\n  dup1\n    /* \"battle.sol\":365:375  msg.sender */\n  caller\n    /* \"battle.sol\":355:376  ownedNfts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"battle.sol\":382:402  Nft(1, NftType.Unit) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"battle.sol\":386:387  1 */\n  0x01\n    /* \"battle.sol\":382:402  Nft(1, NftType.Unit) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"battle.sol\":389:401  NftType.Unit */\n  0x00\n    /* \"battle.sol\":382:402  Nft(1, NftType.Unit) */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_6\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  pop\n    /* \"battle.sol\":355:403  ownedNfts[msg.sender].push(Nft(1, NftType.Unit)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  tag_19\n  tag_6\n  jump\t// in\ntag_19:\ntag_18:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"battle.sol\":413:422  ownedNfts */\n  0x00\n    /* \"battle.sol\":413:434  ownedNfts[msg.sender] */\n  dup1\n    /* \"battle.sol\":423:433  msg.sender */\n  caller\n    /* \"battle.sol\":413:434  ownedNfts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"battle.sol\":440:460  Nft(1, NftType.Unit) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"battle.sol\":444:445  1 */\n  0x01\n    /* \"battle.sol\":440:460  Nft(1, NftType.Unit) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"battle.sol\":447:459  NftType.Unit */\n  0x00\n    /* \"battle.sol\":440:460  Nft(1, NftType.Unit) */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_21\n  tag_6\n  jump\t// in\ntag_21:\ntag_20:\n  dup2\n  mstore\n  pop\n    /* \"battle.sol\":413:461  ownedNfts[msg.sender].push(Nft(1, NftType.Unit)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_6\n  jump\t// in\ntag_24:\ntag_23:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"battle.sol\":471:480  ownedNfts */\n  0x00\n    /* \"battle.sol\":471:492  ownedNfts[msg.sender] */\n  dup1\n    /* \"battle.sol\":481:491  msg.sender */\n  caller\n    /* \"battle.sol\":471:492  ownedNfts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"battle.sol\":498:518  Nft(1, NftType.Unit) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"battle.sol\":502:503  1 */\n  0x01\n    /* \"battle.sol\":498:518  Nft(1, NftType.Unit) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"battle.sol\":505:517  NftType.Unit */\n  0x00\n    /* \"battle.sol\":498:518  Nft(1, NftType.Unit) */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_6\n  jump\t// in\ntag_26:\ntag_25:\n  dup2\n  mstore\n  pop\n    /* \"battle.sol\":471:519  ownedNfts[msg.sender].push(Nft(1, NftType.Unit)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  tag_29\n  tag_6\n  jump\t// in\ntag_29:\ntag_28:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"battle.sol\":143:852  contract Battle {... */\n  jump(tag_30)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"battle.sol\":143:852  contract Battle {... */\ntag_30:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"battle.sol\":143:852  contract Battle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3d9a3479\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbe7dff1d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd8cb55e3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"battle.sol\":165:207  mapping(address => Nft[]) public ownedNfts */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"battle.sol\":637:850  function applyBattleSquad(uint256[] memory nfts)... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"battle.sol\":532:631  function getNfts() public view returns (Nft[] memory) {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"battle.sol\":165:207  mapping(address => Nft[]) public ownedNfts */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"battle.sol\":637:850  function applyBattleSquad(uint256[] memory nfts)... */\n    tag_15:\n        /* \"battle.sol\":731:743  Nft[] memory */\n      0x60\n        /* \"battle.sol\":764:774  uint256 _i */\n      0x00\n        /* \"battle.sol\":759:806  for (uint256 _i = 0; _i < nfts.length; _i++) {} */\n    tag_24:\n        /* \"battle.sol\":785:789  nfts */\n      dup3\n        /* \"battle.sol\":785:796  nfts.length */\n      mload\n        /* \"battle.sol\":780:782  _i */\n      dup2\n        /* \"battle.sol\":780:796  _i < nfts.length */\n      lt\n        /* \"battle.sol\":759:806  for (uint256 _i = 0; _i < nfts.length; _i++) {} */\n      iszero\n      tag_25\n      jumpi\n        /* \"battle.sol\":798:802  _i++ */\n      dup1\n      dup1\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      swap2\n      pop\n      pop\n        /* \"battle.sol\":759:806  for (uint256 _i = 0; _i < nfts.length; _i++) {} */\n      jump(tag_24)\n    tag_25:\n      pop\n        /* \"battle.sol\":822:831  ownedNfts */\n      0x00\n        /* \"battle.sol\":822:843  ownedNfts[msg.sender] */\n      dup1\n        /* \"battle.sol\":832:842  msg.sender */\n      caller\n        /* \"battle.sol\":822:843  ownedNfts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"battle.sol\":815:843  return ownedNfts[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_29:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n    tag_32:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_34\n      jump\t// in\n    tag_36:\n    tag_35:\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_29)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"battle.sol\":637:850  function applyBattleSquad(uint256[] memory nfts)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"battle.sol\":532:631  function getNfts() public view returns (Nft[] memory) {... */\n    tag_19:\n        /* \"battle.sol\":572:584  Nft[] memory */\n      0x60\n        /* \"battle.sol\":603:612  ownedNfts */\n      0x00\n        /* \"battle.sol\":603:624  ownedNfts[msg.sender] */\n      dup1\n        /* \"battle.sol\":613:623  msg.sender */\n      caller\n        /* \"battle.sol\":603:624  ownedNfts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"battle.sol\":596:624  return ownedNfts[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_38:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_39\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      tag_42\n      tag_34\n      jump\t// in\n    tag_42:\n    tag_41:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_34\n      jump\t// in\n    tag_44:\n    tag_43:\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_38)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"battle.sol\":532:631  function getNfts() public view returns (Nft[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_45:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_46:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_47:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_48:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_49:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_85\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_48\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_50:\n        /* \"#utility.yul\":641:665   */\n      tag_87\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_49\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_88:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_51:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_90\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_50\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_52:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_53:\n        /* \"#utility.yul\":997:1021   */\n      tag_93\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_52\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_94:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_54:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_96\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_53\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_8:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_99\n      tag_46\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1290:1409   */\n    tag_98:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_100\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_51\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_101\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_54\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_55:\n        /* \"#utility.yul\":1764:1788   */\n      tag_103\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_52\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:1981   */\n    tag_34:\n        /* \"#utility.yul\":1849:1926   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1839:1927   */\n      mstore\n        /* \"#utility.yul\":1946:1950   */\n      0x21\n        /* \"#utility.yul\":1943:1944   */\n      0x04\n        /* \"#utility.yul\":1936:1951   */\n      mstore\n        /* \"#utility.yul\":1970:1974   */\n      0x24\n        /* \"#utility.yul\":1967:1968   */\n      0x00\n        /* \"#utility.yul\":1960:1975   */\n      revert\n        /* \"#utility.yul\":1987:2103   */\n    tag_56:\n        /* \"#utility.yul\":2071:2072   */\n      0x03\n        /* \"#utility.yul\":2064:2069   */\n      dup2\n        /* \"#utility.yul\":2061:2073   */\n      lt\n        /* \"#utility.yul\":2051:2097   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2077:2095   */\n      tag_107\n      tag_34\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2051:2097   */\n    tag_106:\n        /* \"#utility.yul\":1987:2103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2109:2242   */\n    tag_57:\n        /* \"#utility.yul\":2157:2164   */\n      0x00\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2175:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2192:2236   */\n      tag_109\n        /* \"#utility.yul\":2230:2235   */\n      dup3\n        /* \"#utility.yul\":2192:2236   */\n      tag_56\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2109:2242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2248:2381   */\n    tag_58:\n        /* \"#utility.yul\":2307:2316   */\n      0x00\n        /* \"#utility.yul\":2340:2375   */\n      tag_111\n        /* \"#utility.yul\":2369:2374   */\n      dup3\n        /* \"#utility.yul\":2340:2375   */\n      tag_57\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2327:2375   */\n      swap1\n      pop\n        /* \"#utility.yul\":2248:2381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2387:2536   */\n    tag_59:\n        /* \"#utility.yul\":2483:2529   */\n      tag_113\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2483:2529   */\n      tag_58\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2478:2481   */\n      dup3\n        /* \"#utility.yul\":2471:2530   */\n      mstore\n        /* \"#utility.yul\":2387:2536   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2542:2892   */\n    tag_11:\n        /* \"#utility.yul\":2672:2676   */\n      0x00\n        /* \"#utility.yul\":2710:2712   */\n      0x40\n        /* \"#utility.yul\":2699:2708   */\n      dup3\n        /* \"#utility.yul\":2695:2713   */\n      add\n        /* \"#utility.yul\":2687:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2794   */\n      tag_115\n        /* \"#utility.yul\":2791:2792   */\n      0x00\n        /* \"#utility.yul\":2780:2789   */\n      dup4\n        /* \"#utility.yul\":2776:2793   */\n      add\n        /* \"#utility.yul\":2767:2773   */\n      dup6\n        /* \"#utility.yul\":2723:2794   */\n      tag_55\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2804:2885   */\n      tag_116\n        /* \"#utility.yul\":2881:2883   */\n      0x20\n        /* \"#utility.yul\":2870:2879   */\n      dup4\n        /* \"#utility.yul\":2866:2884   */\n      add\n        /* \"#utility.yul\":2857:2863   */\n      dup5\n        /* \"#utility.yul\":2804:2885   */\n      tag_59\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2542:2892   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2898:3015   */\n    tag_60:\n        /* \"#utility.yul\":3007:3008   */\n      0x00\n        /* \"#utility.yul\":3004:3005   */\n      dup1\n        /* \"#utility.yul\":2997:3009   */\n      revert\n        /* \"#utility.yul\":3021:3123   */\n    tag_61:\n        /* \"#utility.yul\":3062:3068   */\n      0x00\n        /* \"#utility.yul\":3113:3115   */\n      0x1f\n        /* \"#utility.yul\":3109:3116   */\n      not\n        /* \"#utility.yul\":3104:3106   */\n      0x1f\n        /* \"#utility.yul\":3097:3102   */\n      dup4\n        /* \"#utility.yul\":3093:3107   */\n      add\n        /* \"#utility.yul\":3089:3117   */\n      and\n        /* \"#utility.yul\":3079:3117   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3129:3309   */\n    tag_62:\n        /* \"#utility.yul\":3177:3254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3167:3255   */\n      mstore\n        /* \"#utility.yul\":3274:3278   */\n      0x41\n        /* \"#utility.yul\":3271:3272   */\n      0x04\n        /* \"#utility.yul\":3264:3279   */\n      mstore\n        /* \"#utility.yul\":3298:3302   */\n      0x24\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3288:3303   */\n      revert\n        /* \"#utility.yul\":3315:3596   */\n    tag_63:\n        /* \"#utility.yul\":3398:3425   */\n      tag_121\n        /* \"#utility.yul\":3420:3424   */\n      dup3\n        /* \"#utility.yul\":3398:3425   */\n      tag_61\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3390:3396   */\n      dup2\n        /* \"#utility.yul\":3386:3426   */\n      add\n        /* \"#utility.yul\":3528:3534   */\n      dup2\n        /* \"#utility.yul\":3516:3526   */\n      dup2\n        /* \"#utility.yul\":3513:3535   */\n      lt\n        /* \"#utility.yul\":3492:3510   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3480:3490   */\n      dup3\n        /* \"#utility.yul\":3477:3511   */\n      gt\n        /* \"#utility.yul\":3474:3536   */\n      or\n        /* \"#utility.yul\":3471:3559   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3539:3557   */\n      tag_123\n      tag_62\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3471:3559   */\n    tag_122:\n        /* \"#utility.yul\":3579:3589   */\n      dup1\n        /* \"#utility.yul\":3575:3577   */\n      0x40\n        /* \"#utility.yul\":3568:3590   */\n      mstore\n        /* \"#utility.yul\":3358:3596   */\n      pop\n        /* \"#utility.yul\":3315:3596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3731   */\n    tag_64:\n        /* \"#utility.yul\":3636:3642   */\n      0x00\n        /* \"#utility.yul\":3663:3683   */\n      tag_125\n      tag_45\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3653:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3692:3725   */\n      tag_126\n        /* \"#utility.yul\":3720:3724   */\n      dup3\n        /* \"#utility.yul\":3712:3718   */\n      dup3\n        /* \"#utility.yul\":3692:3725   */\n      tag_63\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3602:3731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3737:4048   */\n    tag_65:\n        /* \"#utility.yul\":3814:3818   */\n      0x00\n        /* \"#utility.yul\":3904:3922   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3896:3902   */\n      dup3\n        /* \"#utility.yul\":3893:3923   */\n      gt\n        /* \"#utility.yul\":3890:3946   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3926:3944   */\n      tag_129\n      tag_62\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3890:3946   */\n    tag_128:\n        /* \"#utility.yul\":3976:3980   */\n      0x20\n        /* \"#utility.yul\":3968:3974   */\n      dup3\n        /* \"#utility.yul\":3964:3981   */\n      mul\n        /* \"#utility.yul\":3956:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":4036:4040   */\n      0x20\n        /* \"#utility.yul\":4030:4034   */\n      dup2\n        /* \"#utility.yul\":4026:4041   */\n      add\n        /* \"#utility.yul\":4018:4041   */\n      swap1\n      pop\n        /* \"#utility.yul\":3737:4048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4054:4171   */\n    tag_66:\n        /* \"#utility.yul\":4163:4164   */\n      0x00\n        /* \"#utility.yul\":4160:4161   */\n      dup1\n        /* \"#utility.yul\":4153:4165   */\n      revert\n        /* \"#utility.yul\":4194:4904   */\n    tag_67:\n        /* \"#utility.yul\":4290:4295   */\n      0x00\n        /* \"#utility.yul\":4315:4396   */\n      tag_132\n        /* \"#utility.yul\":4331:4395   */\n      tag_133\n        /* \"#utility.yul\":4388:4394   */\n      dup5\n        /* \"#utility.yul\":4331:4395   */\n      tag_65\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4315:4396   */\n      tag_64\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4306:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4416:4421   */\n      dup1\n        /* \"#utility.yul\":4445:4451   */\n      dup4\n        /* \"#utility.yul\":4438:4443   */\n      dup3\n        /* \"#utility.yul\":4431:4452   */\n      mstore\n        /* \"#utility.yul\":4479:4483   */\n      0x20\n        /* \"#utility.yul\":4472:4477   */\n      dup3\n        /* \"#utility.yul\":4468:4484   */\n      add\n        /* \"#utility.yul\":4461:4484   */\n      swap1\n      pop\n        /* \"#utility.yul\":4532:4536   */\n      0x20\n        /* \"#utility.yul\":4524:4530   */\n      dup5\n        /* \"#utility.yul\":4520:4537   */\n      mul\n        /* \"#utility.yul\":4512:4518   */\n      dup4\n        /* \"#utility.yul\":4508:4538   */\n      add\n        /* \"#utility.yul\":4561:4564   */\n      dup6\n        /* \"#utility.yul\":4553:4559   */\n      dup2\n        /* \"#utility.yul\":4550:4565   */\n      gt\n        /* \"#utility.yul\":4547:4669   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4580:4659   */\n      tag_135\n      tag_66\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4547:4669   */\n    tag_134:\n        /* \"#utility.yul\":4695:4701   */\n      dup4\n        /* \"#utility.yul\":4678:4898   */\n    tag_136:\n        /* \"#utility.yul\":4712:4718   */\n      dup2\n        /* \"#utility.yul\":4707:4710   */\n      dup2\n        /* \"#utility.yul\":4704:4719   */\n      lt\n        /* \"#utility.yul\":4678:4898   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4787:4790   */\n      dup1\n        /* \"#utility.yul\":4816:4853   */\n      tag_139\n        /* \"#utility.yul\":4849:4852   */\n      dup9\n        /* \"#utility.yul\":4837:4847   */\n      dup3\n        /* \"#utility.yul\":4816:4853   */\n      tag_54\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4811:4814   */\n      dup5\n        /* \"#utility.yul\":4804:4854   */\n      mstore\n        /* \"#utility.yul\":4883:4887   */\n      0x20\n        /* \"#utility.yul\":4878:4881   */\n      dup5\n        /* \"#utility.yul\":4874:4888   */\n      add\n        /* \"#utility.yul\":4867:4888   */\n      swap4\n      pop\n        /* \"#utility.yul\":4754:4898   */\n      pop\n        /* \"#utility.yul\":4738:4742   */\n      0x20\n        /* \"#utility.yul\":4733:4736   */\n      dup2\n        /* \"#utility.yul\":4729:4743   */\n      add\n        /* \"#utility.yul\":4722:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4678:4898   */\n      jump(tag_136)\n    tag_138:\n        /* \"#utility.yul\":4682:4703   */\n      pop\n        /* \"#utility.yul\":4296:4904   */\n      pop\n      pop\n        /* \"#utility.yul\":4194:4904   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5297   */\n    tag_68:\n        /* \"#utility.yul\":4998:5003   */\n      0x00\n        /* \"#utility.yul\":5047:5050   */\n      dup3\n        /* \"#utility.yul\":5040:5044   */\n      0x1f\n        /* \"#utility.yul\":5032:5038   */\n      dup4\n        /* \"#utility.yul\":5028:5045   */\n      add\n        /* \"#utility.yul\":5024:5051   */\n      slt\n        /* \"#utility.yul\":5014:5136   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":5055:5134   */\n      tag_142\n      tag_60\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5014:5136   */\n    tag_141:\n        /* \"#utility.yul\":5172:5178   */\n      dup2\n        /* \"#utility.yul\":5159:5179   */\n      calldataload\n        /* \"#utility.yul\":5197:5291   */\n      tag_143\n        /* \"#utility.yul\":5287:5290   */\n      dup5\n        /* \"#utility.yul\":5279:5285   */\n      dup3\n        /* \"#utility.yul\":5272:5276   */\n      0x20\n        /* \"#utility.yul\":5264:5270   */\n      dup7\n        /* \"#utility.yul\":5260:5277   */\n      add\n        /* \"#utility.yul\":5197:5291   */\n      tag_67\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5188:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":5004:5297   */\n      pop\n        /* \"#utility.yul\":4927:5297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5842   */\n    tag_14:\n        /* \"#utility.yul\":5387:5393   */\n      0x00\n        /* \"#utility.yul\":5436:5438   */\n      0x20\n        /* \"#utility.yul\":5424:5433   */\n      dup3\n        /* \"#utility.yul\":5415:5422   */\n      dup5\n        /* \"#utility.yul\":5411:5434   */\n      sub\n        /* \"#utility.yul\":5407:5439   */\n      slt\n        /* \"#utility.yul\":5404:5523   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5442:5521   */\n      tag_146\n      tag_46\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5404:5523   */\n    tag_145:\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5579:5588   */\n      dup3\n        /* \"#utility.yul\":5575:5592   */\n      add\n        /* \"#utility.yul\":5562:5593   */\n      calldataload\n        /* \"#utility.yul\":5620:5638   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5612:5618   */\n      dup2\n        /* \"#utility.yul\":5609:5639   */\n      gt\n        /* \"#utility.yul\":5606:5723   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":5642:5721   */\n      tag_148\n      tag_47\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5606:5723   */\n    tag_147:\n        /* \"#utility.yul\":5747:5825   */\n      tag_149\n        /* \"#utility.yul\":5817:5824   */\n      dup5\n        /* \"#utility.yul\":5808:5814   */\n      dup3\n        /* \"#utility.yul\":5797:5806   */\n      dup6\n        /* \"#utility.yul\":5793:5815   */\n      add\n        /* \"#utility.yul\":5747:5825   */\n      tag_68\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5737:5825   */\n      swap2\n      pop\n        /* \"#utility.yul\":5533:5835   */\n      pop\n        /* \"#utility.yul\":5303:5842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5848:5982   */\n    tag_69:\n        /* \"#utility.yul\":5935:5941   */\n      0x00\n        /* \"#utility.yul\":5969:5974   */\n      dup2\n        /* \"#utility.yul\":5963:5975   */\n      mload\n        /* \"#utility.yul\":5953:5975   */\n      swap1\n      pop\n        /* \"#utility.yul\":5848:5982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5988:6192   */\n    tag_70:\n        /* \"#utility.yul\":6107:6118   */\n      0x00\n        /* \"#utility.yul\":6141:6147   */\n      dup3\n        /* \"#utility.yul\":6136:6139   */\n      dup3\n        /* \"#utility.yul\":6129:6148   */\n      mstore\n        /* \"#utility.yul\":6181:6185   */\n      0x20\n        /* \"#utility.yul\":6176:6179   */\n      dup3\n        /* \"#utility.yul\":6172:6186   */\n      add\n        /* \"#utility.yul\":6157:6186   */\n      swap1\n      pop\n        /* \"#utility.yul\":5988:6192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6198:6350   */\n    tag_71:\n        /* \"#utility.yul\":6285:6289   */\n      0x00\n        /* \"#utility.yul\":6308:6311   */\n      dup2\n        /* \"#utility.yul\":6300:6311   */\n      swap1\n      pop\n        /* \"#utility.yul\":6338:6342   */\n      0x20\n        /* \"#utility.yul\":6333:6336   */\n      dup3\n        /* \"#utility.yul\":6329:6343   */\n      add\n        /* \"#utility.yul\":6321:6343   */\n      swap1\n      pop\n        /* \"#utility.yul\":6198:6350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6464   */\n    tag_72:\n        /* \"#utility.yul\":6433:6457   */\n      tag_154\n        /* \"#utility.yul\":6451:6456   */\n      dup2\n        /* \"#utility.yul\":6433:6457   */\n      tag_52\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6428:6431   */\n      dup3\n        /* \"#utility.yul\":6421:6458   */\n      mstore\n        /* \"#utility.yul\":6356:6464   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6609   */\n    tag_73:\n        /* \"#utility.yul\":6556:6602   */\n      tag_156\n        /* \"#utility.yul\":6596:6601   */\n      dup2\n        /* \"#utility.yul\":6556:6602   */\n      tag_58\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6551:6554   */\n      dup3\n        /* \"#utility.yul\":6544:6603   */\n      mstore\n        /* \"#utility.yul\":6470:6609   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6647:7144   */\n    tag_74:\n        /* \"#utility.yul\":6774:6778   */\n      0x40\n        /* \"#utility.yul\":6769:6772   */\n      dup3\n        /* \"#utility.yul\":6765:6779   */\n      add\n        /* \"#utility.yul\":6859:6863   */\n      0x00\n        /* \"#utility.yul\":6852:6857   */\n      dup3\n        /* \"#utility.yul\":6848:6864   */\n      add\n        /* \"#utility.yul\":6842:6865   */\n      mload\n        /* \"#utility.yul\":6878:6941   */\n      tag_158\n        /* \"#utility.yul\":6935:6939   */\n      0x00\n        /* \"#utility.yul\":6930:6933   */\n      dup6\n        /* \"#utility.yul\":6926:6940   */\n      add\n        /* \"#utility.yul\":6912:6924   */\n      dup3\n        /* \"#utility.yul\":6878:6941   */\n      tag_72\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6789:6951   */\n      pop\n        /* \"#utility.yul\":7036:7040   */\n      0x20\n        /* \"#utility.yul\":7029:7034   */\n      dup3\n        /* \"#utility.yul\":7025:7041   */\n      add\n        /* \"#utility.yul\":7019:7042   */\n      mload\n        /* \"#utility.yul\":7055:7127   */\n      tag_159\n        /* \"#utility.yul\":7121:7125   */\n      0x20\n        /* \"#utility.yul\":7116:7119   */\n      dup6\n        /* \"#utility.yul\":7112:7126   */\n      add\n        /* \"#utility.yul\":7098:7110   */\n      dup3\n        /* \"#utility.yul\":7055:7127   */\n      tag_73\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6961:7137   */\n      pop\n        /* \"#utility.yul\":6743:7144   */\n      pop\n        /* \"#utility.yul\":6647:7144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7150:7409   */\n    tag_75:\n        /* \"#utility.yul\":7259:7269   */\n      0x00\n        /* \"#utility.yul\":7280:7366   */\n      tag_161\n        /* \"#utility.yul\":7362:7365   */\n      dup4\n        /* \"#utility.yul\":7354:7360   */\n      dup4\n        /* \"#utility.yul\":7280:7366   */\n      tag_74\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7398:7402   */\n      0x40\n        /* \"#utility.yul\":7393:7396   */\n      dup4\n        /* \"#utility.yul\":7389:7403   */\n      add\n        /* \"#utility.yul\":7375:7403   */\n      swap1\n      pop\n        /* \"#utility.yul\":7150:7409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7415:7548   */\n    tag_76:\n        /* \"#utility.yul\":7505:7509   */\n      0x00\n        /* \"#utility.yul\":7537:7541   */\n      0x20\n        /* \"#utility.yul\":7532:7535   */\n      dup3\n        /* \"#utility.yul\":7528:7542   */\n      add\n        /* \"#utility.yul\":7520:7542   */\n      swap1\n      pop\n        /* \"#utility.yul\":7415:7548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:8482   */\n    tag_77:\n        /* \"#utility.yul\":7749:7752   */\n      0x00\n        /* \"#utility.yul\":7778:7852   */\n      tag_164\n        /* \"#utility.yul\":7846:7851   */\n      dup3\n        /* \"#utility.yul\":7778:7852   */\n      tag_69\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7868:7974   */\n      tag_165\n        /* \"#utility.yul\":7967:7973   */\n      dup2\n        /* \"#utility.yul\":7962:7965   */\n      dup6\n        /* \"#utility.yul\":7868:7974   */\n      tag_70\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7861:7974   */\n      swap4\n      pop\n        /* \"#utility.yul\":7998:8074   */\n      tag_166\n        /* \"#utility.yul\":8068:8073   */\n      dup4\n        /* \"#utility.yul\":7998:8074   */\n      tag_71\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":8097:8104   */\n      dup1\n        /* \"#utility.yul\":8128:8129   */\n      0x00\n        /* \"#utility.yul\":8113:8457   */\n    tag_167:\n        /* \"#utility.yul\":8138:8144   */\n      dup4\n        /* \"#utility.yul\":8135:8136   */\n      dup2\n        /* \"#utility.yul\":8132:8145   */\n      lt\n        /* \"#utility.yul\":8113:8457   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":8214:8220   */\n      dup2\n        /* \"#utility.yul\":8208:8221   */\n      mload\n        /* \"#utility.yul\":8241:8344   */\n      tag_170\n        /* \"#utility.yul\":8340:8343   */\n      dup9\n        /* \"#utility.yul\":8325:8338   */\n      dup3\n        /* \"#utility.yul\":8241:8344   */\n      tag_75\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8234:8344   */\n      swap8\n      pop\n        /* \"#utility.yul\":8367:8447   */\n      tag_171\n        /* \"#utility.yul\":8440:8446   */\n      dup4\n        /* \"#utility.yul\":8367:8447   */\n      tag_76\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":8357:8447   */\n      swap3\n      pop\n        /* \"#utility.yul\":8173:8457   */\n      pop\n        /* \"#utility.yul\":8160:8161   */\n      0x01\n        /* \"#utility.yul\":8157:8158   */\n      dup2\n        /* \"#utility.yul\":8153:8162   */\n      add\n        /* \"#utility.yul\":8148:8162   */\n      swap1\n      pop\n        /* \"#utility.yul\":8113:8457   */\n      jump(tag_167)\n    tag_169:\n        /* \"#utility.yul\":8117:8131   */\n      pop\n        /* \"#utility.yul\":8473:8476   */\n      dup6\n        /* \"#utility.yul\":8466:8476   */\n      swap4\n      pop\n        /* \"#utility.yul\":7754:8482   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7590:8482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8488:8941   */\n    tag_17:\n        /* \"#utility.yul\":8671:8675   */\n      0x00\n        /* \"#utility.yul\":8709:8711   */\n      0x20\n        /* \"#utility.yul\":8698:8707   */\n      dup3\n        /* \"#utility.yul\":8694:8712   */\n      add\n        /* \"#utility.yul\":8686:8712   */\n      swap1\n      pop\n        /* \"#utility.yul\":8758:8767   */\n      dup2\n        /* \"#utility.yul\":8752:8756   */\n      dup2\n        /* \"#utility.yul\":8748:8768   */\n      sub\n        /* \"#utility.yul\":8744:8745   */\n      0x00\n        /* \"#utility.yul\":8733:8742   */\n      dup4\n        /* \"#utility.yul\":8729:8746   */\n      add\n        /* \"#utility.yul\":8722:8769   */\n      mstore\n        /* \"#utility.yul\":8786:8934   */\n      tag_173\n        /* \"#utility.yul\":8929:8933   */\n      dup2\n        /* \"#utility.yul\":8920:8926   */\n      dup5\n        /* \"#utility.yul\":8786:8934   */\n      tag_77\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":8778:8934   */\n      swap1\n      pop\n        /* \"#utility.yul\":8488:8941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8947:9127   */\n    tag_78:\n        /* \"#utility.yul\":8995:9072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8992:8993   */\n      0x00\n        /* \"#utility.yul\":8985:9073   */\n      mstore\n        /* \"#utility.yul\":9092:9096   */\n      0x11\n        /* \"#utility.yul\":9089:9090   */\n      0x04\n        /* \"#utility.yul\":9082:9097   */\n      mstore\n        /* \"#utility.yul\":9116:9120   */\n      0x24\n        /* \"#utility.yul\":9113:9114   */\n      0x00\n        /* \"#utility.yul\":9106:9121   */\n      revert\n        /* \"#utility.yul\":9133:9366   */\n    tag_28:\n        /* \"#utility.yul\":9172:9175   */\n      0x00\n        /* \"#utility.yul\":9195:9219   */\n      tag_176\n        /* \"#utility.yul\":9213:9218   */\n      dup3\n        /* \"#utility.yul\":9195:9219   */\n      tag_52\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":9186:9219   */\n      swap2\n      pop\n        /* \"#utility.yul\":9241:9307   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9234:9239   */\n      dup3\n        /* \"#utility.yul\":9231:9308   */\n      sub\n        /* \"#utility.yul\":9228:9331   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":9311:9329   */\n      tag_178\n      tag_78\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":9228:9331   */\n    tag_177:\n        /* \"#utility.yul\":9358:9359   */\n      0x01\n        /* \"#utility.yul\":9351:9356   */\n      dup3\n        /* \"#utility.yul\":9347:9360   */\n      add\n        /* \"#utility.yul\":9340:9360   */\n      swap1\n      pop\n        /* \"#utility.yul\":9133:9366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204139bd27e248c5426d8078751c8dcca58618599e77b37965a273015054c7ccf664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_403": {
									"entryPoint": null,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:3"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405280600181526020016000600281111562000079576200007862000432565b5b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836002811115620000dd57620000dc62000432565b5b021790555050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528060018152602001600060028111156200014b576200014a62000432565b5b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836002811115620001af57620001ae62000432565b5b021790555050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528060018152602001600060028111156200021d576200021c62000432565b5b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111562000281576200028062000432565b5b021790555050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052806001815260200160006002811115620002ef57620002ee62000432565b5b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111562000353576200035262000432565b5b021790555050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052806001815260200160006002811115620003c157620003c062000432565b5b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111562000425576200042462000432565b5b0217905550505062000461565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6107f980620004716000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633d9a347914610046578063be7dff1d14610077578063d8cb55e3146100a7575b600080fd5b610060600480360381019061005b919061039d565b6100c5565b60405161006e929190610463565b60405180910390f35b610091600480360381019061008c91906105e5565b610113565b60405161009e919061072a565b60405180910390f35b6100af610215565b6040516100bc919061072a565b60405180910390f35b600060205281600052604060002081815481106100e157600080fd5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a900460ff16905082565b606060005b825181101561013457808061012c9061077b565b915050610118565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561020a5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156101e5576101e46103ec565b5b60028111156101f7576101f66103ec565b5b8152505081526020019060010190610193565b505050509050919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102ec5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156102c7576102c66103ec565b5b60028111156102d9576102d86103ec565b5b8152505081526020019060010190610275565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033482610309565b9050919050565b61034481610329565b811461034f57600080fd5b50565b6000813590506103618161033b565b92915050565b6000819050919050565b61037a81610367565b811461038557600080fd5b50565b60008135905061039781610371565b92915050565b600080604083850312156103b4576103b36102ff565b5b60006103c285828601610352565b92505060206103d385828601610388565b9150509250929050565b6103e681610367565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061042c5761042b6103ec565b5b50565b600081905061043d8261041b565b919050565b600061044d8261042f565b9050919050565b61045d81610442565b82525050565b600060408201905061047860008301856103dd565b6104856020830184610454565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104da82610491565b810181811067ffffffffffffffff821117156104f9576104f86104a2565b5b80604052505050565b600061050c6102f5565b905061051882826104d1565b919050565b600067ffffffffffffffff821115610538576105376104a2565b5b602082029050602081019050919050565b600080fd5b600061056161055c8461051d565b610502565b9050808382526020820190506020840283018581111561058457610583610549565b5b835b818110156105ad57806105998882610388565b845260208401935050602081019050610586565b5050509392505050565b600082601f8301126105cc576105cb61048c565b5b81356105dc84826020860161054e565b91505092915050565b6000602082840312156105fb576105fa6102ff565b5b600082013567ffffffffffffffff81111561061957610618610304565b5b610625848285016105b7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61066381610367565b82525050565b61067281610442565b82525050565b60408201600082015161068e600085018261065a565b5060208201516106a16020850182610669565b50505050565b60006106b38383610678565b60408301905092915050565b6000602082019050919050565b60006106d78261062e565b6106e18185610639565b93506106ec8361064a565b8060005b8381101561071d57815161070488826106a7565b975061070f836106bf565b9250506001810190506106f0565b5085935050505092915050565b6000602082019050818103600083015261074481846106cc565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061078682610367565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107b8576107b761074c565b5b60018201905091905056fea26469706673582212204139bd27e248c5426d8078751c8dcca58618599e77b37965a273015054c7ccf664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x79 JUMPI PUSH3 0x78 PUSH3 0x432 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0xDD JUMPI PUSH3 0xDC PUSH3 0x432 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x14B JUMPI PUSH3 0x14A PUSH3 0x432 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x1AF JUMPI PUSH3 0x1AE PUSH3 0x432 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x21D JUMPI PUSH3 0x21C PUSH3 0x432 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x281 JUMPI PUSH3 0x280 PUSH3 0x432 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2EE PUSH3 0x432 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x353 JUMPI PUSH3 0x352 PUSH3 0x432 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x3C1 JUMPI PUSH3 0x3C0 PUSH3 0x432 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x425 JUMPI PUSH3 0x424 PUSH3 0x432 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x461 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7F9 DUP1 PUSH3 0x471 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D9A3479 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBE7DFF1D EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD8CB55E3 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP1 PUSH2 0x12C SWAP1 PUSH2 0x77B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118 JUMP JUMPDEST POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x20A JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x193 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2EC JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D9 JUMPI PUSH2 0x2D8 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 DUP3 PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x361 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37A DUP2 PUSH2 0x367 JUMP JUMPDEST DUP2 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x2FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP6 DUP3 DUP7 ADD PUSH2 0x352 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D3 DUP6 DUP3 DUP7 ADD PUSH2 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x3EC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x43D DUP3 PUSH2 0x41B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D DUP3 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x478 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x485 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x491 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x518 DUP3 DUP3 PUSH2 0x4D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH2 0x537 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x561 PUSH2 0x55C DUP5 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x549 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH2 0x599 DUP9 DUP3 PUSH2 0x388 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x586 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x54E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x2FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0x367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x672 DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x68E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x65A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x6A1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x669 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 DUP4 DUP4 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 DUP3 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x6E1 DUP2 DUP6 PUSH2 0x639 JUMP JUMPDEST SWAP4 POP PUSH2 0x6EC DUP4 PUSH2 0x64A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71D JUMPI DUP2 MLOAD PUSH2 0x704 DUP9 DUP3 PUSH2 0x6A7 JUMP JUMPDEST SWAP8 POP PUSH2 0x70F DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6F0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x744 DUP2 DUP5 PUSH2 0x6CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x786 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x74C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE CODECOPY 0xBD 0x27 0xE2 BASEFEE 0xC5 TIMESTAMP PUSH14 0x8078751C8DCCA58618599E77B379 PUSH6 0xA273015054C7 0xCC 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "143:709:1:-:0;;;215:311;;;;;;;;;;239:9;:21;249:10;239:21;;;;;;;;;;;;;;;266:20;;;;;;;;270:1;266:20;;;;273:12;266:20;;;;;;;;:::i;:::-;;;;;239:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;297:9;:21;307:10;297:21;;;;;;;;;;;;;;;324:20;;;;;;;;328:1;324:20;;;;331:12;324:20;;;;;;;;:::i;:::-;;;;;297:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;355:9;:21;365:10;355:21;;;;;;;;;;;;;;;382:20;;;;;;;;386:1;382:20;;;;389:12;382:20;;;;;;;;:::i;:::-;;;;;355:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;413:9;:21;423:10;413:21;;;;;;;;;;;;;;;440:20;;;;;;;;444:1;440:20;;;;447:12;440:20;;;;;;;;:::i;:::-;;;;;413:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;471:9;:21;481:10;471:21;;;;;;;;;;;;;;;498:20;;;;;;;;502:1;498:20;;;;505:12;498:20;;;;;;;;:::i;:::-;;;;;471:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;143:709;;7:180:3;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;143:709:1;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@applyBattleSquad_445": {
									"entryPoint": 275,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNfts_416": {
									"entryPoint": 533,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownedNfts_339": {
									"entryPoint": 197,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_NftType_$452_to_t_uint8": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_NftType_$452_to_t_uint8_fromStack": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_NftType_$452__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_NftType_$452": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_NftType_$452_to_t_uint8": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_assert_t_enum$_NftType_$452": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9369:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:3",
														"type": ""
													}
												],
												"src": "841:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:3"
															},
															"nodeType": "YulIf",
															"src": "977:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:3",
														"type": ""
													}
												],
												"src": "924:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:3",
														"type": ""
													}
												],
												"src": "1052:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:3"
															},
															"nodeType": "YulIf",
															"src": "1290:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:3",
														"type": ""
													}
												],
												"src": "1197:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:3",
														"type": ""
													}
												],
												"src": "1677:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1829:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1936:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1801:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2041:62:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2075:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "2077:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2077:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2077:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2064:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2071:1:3",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2061:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:20:3"
															},
															"nodeType": "YulIf",
															"src": "2051:46:3"
														}
													]
												},
												"name": "validator_assert_t_enum$_NftType_$452",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2034:5:3",
														"type": ""
													}
												],
												"src": "1987:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2165:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2175:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2186:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2175:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2230:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_NftType_$452",
																	"nodeType": "YulIdentifier",
																	"src": "2192:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:44:3"
														}
													]
												},
												"name": "cleanup_t_enum$_NftType_$452",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2147:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2157:7:3",
														"type": ""
													}
												],
												"src": "2109:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:64:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2327:48:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2369:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_NftType_$452",
																	"nodeType": "YulIdentifier",
																	"src": "2340:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:35:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2327:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_NftType_$452_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2297:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2307:9:3",
														"type": ""
													}
												],
												"src": "2248:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2461:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2478:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2523:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_NftType_$452_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2483:39:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:46:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:59:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_NftType_$452_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2449:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2456:3:3",
														"type": ""
													}
												],
												"src": "2387:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2677:215:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2687:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2723:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2723:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2857:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2870:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2881:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2866:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_NftType_$452_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2804:52:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:81:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2804:81:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_NftType_$452__to_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2641:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2653:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2661:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2672:4:3",
														"type": ""
													}
												],
												"src": "2542:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2987:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2997:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2898:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3069:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3079:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3097:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3104:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3113:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3109:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3109:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3089:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3079:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3052:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3062:6:3",
														"type": ""
													}
												],
												"src": "3021:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3157:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3174:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3264:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3264:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3288:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3129:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3358:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3368:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3390:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3420:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3398:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3372:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3537:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3539:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3539:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3539:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3480:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3492:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3477:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3516:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3528:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3474:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:62:3"
															},
															"nodeType": "YulIf",
															"src": "3471:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3579:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3568:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3568:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3344:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3352:4:3",
														"type": ""
													}
												],
												"src": "3315:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3653:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3663:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3720:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3692:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3692:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3627:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3636:6:3",
														"type": ""
													}
												],
												"src": "3602:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3819:229:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3924:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3926:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3926:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3926:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3896:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3904:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3893:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:30:3"
															},
															"nodeType": "YulIf",
															"src": "3890:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3968:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:17:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3956:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4018:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4030:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4026:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3803:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3814:4:3",
														"type": ""
													}
												],
												"src": "3737:311:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4143:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4153:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4054:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4296:608:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4306:90:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4331:56:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:64:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4315:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:81:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4306:5:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4405:16:3",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4416:5:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4409:3:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4438:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4445:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4431:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4431:21:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4461:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4472:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4479:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:16:3"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4494:44:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4512:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4532:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:17:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:30:3"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4498:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4566:103:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4580:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4553:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4561:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4550:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:15:3"
															},
															"nodeType": "YulIf",
															"src": "4547:122:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4754:144:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4769:21:3",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4787:3:3"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4773:10:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4811:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4837:10:3"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4849:3:3"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "4816:20:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4816:37:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4804:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4804:50:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4804:50:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4867:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4878:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4883:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4874:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4874:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4867:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4707:3:3"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4712:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4704:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4704:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4720:25:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4722:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4733:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4738:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4729:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4729:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4722:3:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4682:21:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4684:17:3",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4695:6:3"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4688:3:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4678:220:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4266:6:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4274:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4282:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4290:5:3",
														"type": ""
													}
												],
												"src": "4194:710:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:293:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5053:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5055:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5055:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5055:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5032:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5040:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5028:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5028:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5047:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:35:3"
															},
															"nodeType": "YulIf",
															"src": "5014:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5145:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5172:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5159:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5149:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5188:103:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5264:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5260:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5279:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5197:62:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:94:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5188:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4982:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4990:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4998:5:3",
														"type": ""
													}
												],
												"src": "4927:370:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5394:448:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5440:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5442:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5442:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5442:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5415:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5424:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5407:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:32:3"
															},
															"nodeType": "YulIf",
															"src": "5404:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5533:302:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5548:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5579:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5590:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5575:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5575:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5562:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5562:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5552:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5640:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5642:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5642:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5642:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5612:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5620:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5609:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "5606:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5737:88:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5797:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5808:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5793:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5793:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5817:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5747:45:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5747:78:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5737:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5364:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5375:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5387:6:3",
														"type": ""
													}
												],
												"src": "5303:539:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5942:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5953:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5969:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5963:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5953:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5925:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5935:6:3",
														"type": ""
													}
												],
												"src": "5848:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6119:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6136:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6141:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6129:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6129:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6157:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6176:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6181:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6172:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6157:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6091:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6096:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6107:11:3",
														"type": ""
													}
												],
												"src": "5988:204:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6300:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6308:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6300:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6321:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6333:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6321:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6277:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6285:4:3",
														"type": ""
													}
												],
												"src": "6198:152:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6411:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6451:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6433:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6433:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6421:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6399:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6406:3:3",
														"type": ""
													}
												],
												"src": "6356:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6534:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6551:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6596:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_NftType_$452_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6556:39:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:46:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6544:59:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_NftType_$452_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6522:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6529:3:3",
														"type": ""
													}
												],
												"src": "6470:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6743:401:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6753:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6769:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6774:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6765:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6757:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6789:162:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6822:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6852:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6859:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6848:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6848:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6842:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6842:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6826:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6912:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6930:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6935:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6926:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6926:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6878:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6878:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6961:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6999:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7029:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7036:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7025:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7025:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7019:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7003:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7098:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7116:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7121:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7112:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7112:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_enum$_NftType_$452_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7055:42:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7055:72:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7055:72:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6730:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6737:3:3",
														"type": ""
													}
												],
												"src": "6647:497:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7270:139:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7362:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7280:73:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:86:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7280:86:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7375:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7393:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7398:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "7375:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7243:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7251:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "7259:10:3",
														"type": ""
													}
												],
												"src": "7150:259:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7510:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7520:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7537:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7520:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7497:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7505:4:3",
														"type": ""
													}
												],
												"src": "7415:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7754:728:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7764:88:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7846:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7778:67:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:74:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7768:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7861:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7962:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7967:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7868:93:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:106:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7983:91:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8068:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7998:69:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:76:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7987:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8083:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "8097:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8087:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8173:284:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8187:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8214:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8208:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8208:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "8191:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8234:110:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "8325:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8340:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8241:83:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8241:103:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8234:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8357:90:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8440:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8367:72:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8367:80:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8357:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8135:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8138:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8132:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8146:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8148:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8157:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8160:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8153:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8153:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8148:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8117:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8119:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8128:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "8123:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8113:344:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8466:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8473:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8466:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7733:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7740:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7749:3:3",
														"type": ""
													}
												],
												"src": "7590:892:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8676:265:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8686:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8698:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8709:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8694:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8694:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8686:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8744:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8729:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8729:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8752:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8758:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8748:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8748:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8778:156:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8929:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8786:133:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8786:148:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8778:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8648:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8660:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8671:4:3",
														"type": ""
													}
												],
												"src": "8488:453:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8975:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8992:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8995:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8985:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8985:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9089:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9092:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9113:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9116:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8947:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9176:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9186:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9213:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9195:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9195:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9186:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9309:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9311:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9311:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9311:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9234:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9241:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9231:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:77:3"
															},
															"nodeType": "YulIf",
															"src": "9228:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9340:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9351:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9358:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9340:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9162:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9172:3:3",
														"type": ""
													}
												],
												"src": "9133:233:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_NftType_$452(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_NftType_$452(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_NftType_$452(value)\n    }\n\n    function convert_t_enum$_NftType_$452_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_NftType_$452(value)\n    }\n\n    function abi_encode_t_enum$_NftType_$452_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_NftType_$452_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_NftType_$452__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_NftType_$452_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_enum$_NftType_$452_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_NftType_$452_to_t_uint8(value))\n    }\n\n    // struct Nft -> struct Nft\n    function abi_encode_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // nftType\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_NftType_$452_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Nft[] -> struct Nft[]\n    function abi_encode_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Nft_$458_memory_ptr_to_t_struct$_Nft_$458_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633d9a347914610046578063be7dff1d14610077578063d8cb55e3146100a7575b600080fd5b610060600480360381019061005b919061039d565b6100c5565b60405161006e929190610463565b60405180910390f35b610091600480360381019061008c91906105e5565b610113565b60405161009e919061072a565b60405180910390f35b6100af610215565b6040516100bc919061072a565b60405180910390f35b600060205281600052604060002081815481106100e157600080fd5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a900460ff16905082565b606060005b825181101561013457808061012c9061077b565b915050610118565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561020a5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156101e5576101e46103ec565b5b60028111156101f7576101f66103ec565b5b8152505081526020019060010190610193565b505050509050919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102ec5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156102c7576102c66103ec565b5b60028111156102d9576102d86103ec565b5b8152505081526020019060010190610275565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033482610309565b9050919050565b61034481610329565b811461034f57600080fd5b50565b6000813590506103618161033b565b92915050565b6000819050919050565b61037a81610367565b811461038557600080fd5b50565b60008135905061039781610371565b92915050565b600080604083850312156103b4576103b36102ff565b5b60006103c285828601610352565b92505060206103d385828601610388565b9150509250929050565b6103e681610367565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061042c5761042b6103ec565b5b50565b600081905061043d8261041b565b919050565b600061044d8261042f565b9050919050565b61045d81610442565b82525050565b600060408201905061047860008301856103dd565b6104856020830184610454565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104da82610491565b810181811067ffffffffffffffff821117156104f9576104f86104a2565b5b80604052505050565b600061050c6102f5565b905061051882826104d1565b919050565b600067ffffffffffffffff821115610538576105376104a2565b5b602082029050602081019050919050565b600080fd5b600061056161055c8461051d565b610502565b9050808382526020820190506020840283018581111561058457610583610549565b5b835b818110156105ad57806105998882610388565b845260208401935050602081019050610586565b5050509392505050565b600082601f8301126105cc576105cb61048c565b5b81356105dc84826020860161054e565b91505092915050565b6000602082840312156105fb576105fa6102ff565b5b600082013567ffffffffffffffff81111561061957610618610304565b5b610625848285016105b7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61066381610367565b82525050565b61067281610442565b82525050565b60408201600082015161068e600085018261065a565b5060208201516106a16020850182610669565b50505050565b60006106b38383610678565b60408301905092915050565b6000602082019050919050565b60006106d78261062e565b6106e18185610639565b93506106ec8361064a565b8060005b8381101561071d57815161070488826106a7565b975061070f836106bf565b9250506001810190506106f0565b5085935050505092915050565b6000602082019050818103600083015261074481846106cc565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061078682610367565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107b8576107b761074c565b5b60018201905091905056fea26469706673582212204139bd27e248c5426d8078751c8dcca58618599e77b37965a273015054c7ccf664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D9A3479 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBE7DFF1D EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD8CB55E3 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP1 PUSH2 0x12C SWAP1 PUSH2 0x77B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118 JUMP JUMPDEST POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x20A JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x193 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2EC JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D9 JUMPI PUSH2 0x2D8 PUSH2 0x3EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 DUP3 PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x361 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37A DUP2 PUSH2 0x367 JUMP JUMPDEST DUP2 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x2FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP6 DUP3 DUP7 ADD PUSH2 0x352 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D3 DUP6 DUP3 DUP7 ADD PUSH2 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x3EC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x43D DUP3 PUSH2 0x41B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D DUP3 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x478 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x485 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x491 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x518 DUP3 DUP3 PUSH2 0x4D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH2 0x537 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x561 PUSH2 0x55C DUP5 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x549 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH2 0x599 DUP9 DUP3 PUSH2 0x388 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x586 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x54E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x2FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0x367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x672 DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x68E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x65A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x6A1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x669 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 DUP4 DUP4 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 DUP3 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x6E1 DUP2 DUP6 PUSH2 0x639 JUMP JUMPDEST SWAP4 POP PUSH2 0x6EC DUP4 PUSH2 0x64A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71D JUMPI DUP2 MLOAD PUSH2 0x704 DUP9 DUP3 PUSH2 0x6A7 JUMP JUMPDEST SWAP8 POP PUSH2 0x70F DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6F0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x744 DUP2 DUP5 PUSH2 0x6CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x786 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x74C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE CODECOPY 0xBD 0x27 0xE2 BASEFEE 0xC5 TIMESTAMP PUSH14 0x8078751C8DCCA58618599E77B379 PUSH6 0xA273015054C7 0xCC 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "143:709:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;637:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;532:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;165:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;637:213::-;731:12;764:10;759:47;785:4;:11;780:2;:16;759:47;;;798:4;;;;;:::i;:::-;;;;759:47;;;;822:9;:21;832:10;822:21;;;;;;;;;;;;;;;815:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;637:213;;;:::o;532:99::-;572:12;603:9;:21;613:10;603:21;;;;;;;;;;;;;;;596:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;532:99;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:180::-;1849:77;1846:1;1839:88;1946:4;1943:1;1936:15;1970:4;1967:1;1960:15;1987:116;2071:1;2064:5;2061:12;2051:46;;2077:18;;:::i;:::-;2051:46;1987:116;:::o;2109:133::-;2157:7;2186:5;2175:16;;2192:44;2230:5;2192:44;:::i;:::-;2109:133;;;:::o;2248:::-;2307:9;2340:35;2369:5;2340:35;:::i;:::-;2327:48;;2248:133;;;:::o;2387:149::-;2483:46;2523:5;2483:46;:::i;:::-;2478:3;2471:59;2387:149;;:::o;2542:350::-;2672:4;2710:2;2699:9;2695:18;2687:26;;2723:71;2791:1;2780:9;2776:17;2767:6;2723:71;:::i;:::-;2804:81;2881:2;2870:9;2866:18;2857:6;2804:81;:::i;:::-;2542:350;;;;;:::o;2898:117::-;3007:1;3004;2997:12;3021:102;3062:6;3113:2;3109:7;3104:2;3097:5;3093:14;3089:28;3079:38;;3021:102;;;:::o;3129:180::-;3177:77;3174:1;3167:88;3274:4;3271:1;3264:15;3298:4;3295:1;3288:15;3315:281;3398:27;3420:4;3398:27;:::i;:::-;3390:6;3386:40;3528:6;3516:10;3513:22;3492:18;3480:10;3477:34;3474:62;3471:88;;;3539:18;;:::i;:::-;3471:88;3579:10;3575:2;3568:22;3358:238;3315:281;;:::o;3602:129::-;3636:6;3663:20;;:::i;:::-;3653:30;;3692:33;3720:4;3712:6;3692:33;:::i;:::-;3602:129;;;:::o;3737:311::-;3814:4;3904:18;3896:6;3893:30;3890:56;;;3926:18;;:::i;:::-;3890:56;3976:4;3968:6;3964:17;3956:25;;4036:4;4030;4026:15;4018:23;;3737:311;;;:::o;4054:117::-;4163:1;4160;4153:12;4194:710;4290:5;4315:81;4331:64;4388:6;4331:64;:::i;:::-;4315:81;:::i;:::-;4306:90;;4416:5;4445:6;4438:5;4431:21;4479:4;4472:5;4468:16;4461:23;;4532:4;4524:6;4520:17;4512:6;4508:30;4561:3;4553:6;4550:15;4547:122;;;4580:79;;:::i;:::-;4547:122;4695:6;4678:220;4712:6;4707:3;4704:15;4678:220;;;4787:3;4816:37;4849:3;4837:10;4816:37;:::i;:::-;4811:3;4804:50;4883:4;4878:3;4874:14;4867:21;;4754:144;4738:4;4733:3;4729:14;4722:21;;4678:220;;;4682:21;4296:608;;4194:710;;;;;:::o;4927:370::-;4998:5;5047:3;5040:4;5032:6;5028:17;5024:27;5014:122;;5055:79;;:::i;:::-;5014:122;5172:6;5159:20;5197:94;5287:3;5279:6;5272:4;5264:6;5260:17;5197:94;:::i;:::-;5188:103;;5004:293;4927:370;;;;:::o;5303:539::-;5387:6;5436:2;5424:9;5415:7;5411:23;5407:32;5404:119;;;5442:79;;:::i;:::-;5404:119;5590:1;5579:9;5575:17;5562:31;5620:18;5612:6;5609:30;5606:117;;;5642:79;;:::i;:::-;5606:117;5747:78;5817:7;5808:6;5797:9;5793:22;5747:78;:::i;:::-;5737:88;;5533:302;5303:539;;;;:::o;5848:134::-;5935:6;5969:5;5963:12;5953:22;;5848:134;;;:::o;5988:204::-;6107:11;6141:6;6136:3;6129:19;6181:4;6176:3;6172:14;6157:29;;5988:204;;;;:::o;6198:152::-;6285:4;6308:3;6300:11;;6338:4;6333:3;6329:14;6321:22;;6198:152;;;:::o;6356:108::-;6433:24;6451:5;6433:24;:::i;:::-;6428:3;6421:37;6356:108;;:::o;6470:139::-;6556:46;6596:5;6556:46;:::i;:::-;6551:3;6544:59;6470:139;;:::o;6647:497::-;6774:4;6769:3;6765:14;6859:4;6852:5;6848:16;6842:23;6878:63;6935:4;6930:3;6926:14;6912:12;6878:63;:::i;:::-;6789:162;7036:4;7029:5;7025:16;7019:23;7055:72;7121:4;7116:3;7112:14;7098:12;7055:72;:::i;:::-;6961:176;6743:401;6647:497;;:::o;7150:259::-;7259:10;7280:86;7362:3;7354:6;7280:86;:::i;:::-;7398:4;7393:3;7389:14;7375:28;;7150:259;;;;:::o;7415:133::-;7505:4;7537;7532:3;7528:14;7520:22;;7415:133;;;:::o;7590:892::-;7749:3;7778:74;7846:5;7778:74;:::i;:::-;7868:106;7967:6;7962:3;7868:106;:::i;:::-;7861:113;;7998:76;8068:5;7998:76;:::i;:::-;8097:7;8128:1;8113:344;8138:6;8135:1;8132:13;8113:344;;;8214:6;8208:13;8241:103;8340:3;8325:13;8241:103;:::i;:::-;8234:110;;8367:80;8440:6;8367:80;:::i;:::-;8357:90;;8173:284;8160:1;8157;8153:9;8148:14;;8113:344;;;8117:14;8473:3;8466:10;;7754:728;;;7590:892;;;;:::o;8488:453::-;8671:4;8709:2;8698:9;8694:18;8686:26;;8758:9;8752:4;8748:20;8744:1;8733:9;8729:17;8722:47;8786:148;8929:4;8920:6;8786:148;:::i;:::-;8778:156;;8488:453;;;;:::o;8947:180::-;8995:77;8992:1;8985:88;9092:4;9089:1;9082:15;9116:4;9113:1;9106:15;9133:233;9172:3;9195:24;9213:5;9195:24;:::i;:::-;9186:33;;9241:66;9234:5;9231:77;9228:103;;9311:18;;:::i;:::-;9228:103;9358:1;9351:5;9347:13;9340:20;;9133:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "408200",
								"executionCost": "355070",
								"totalCost": "763270"
							},
							"external": {
								"applyBattleSquad(uint256[])": "infinite",
								"getNfts()": "infinite",
								"ownedNfts(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 526,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 526,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 215,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 249,
									"end": 259,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 273,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 266,
									"end": 286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 266,
									"end": 286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 239,
									"end": 287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 239,
									"end": 287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 239,
									"end": 287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 306,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 307,
									"end": 317,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 328,
									"end": 329,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 324,
									"end": 344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 324,
									"end": 344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 297,
									"end": 345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 297,
									"end": 345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 364,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 365,
									"end": 375,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 387,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 389,
									"end": 401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 382,
									"end": 402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 382,
									"end": 402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 382,
									"end": 402,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 355,
									"end": 403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 355,
									"end": 403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 423,
									"end": 433,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 444,
									"end": 445,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 447,
									"end": 459,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 440,
									"end": 460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 413,
									"end": 461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 413,
									"end": 461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 413,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 481,
									"end": 491,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 492,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 505,
									"end": 517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 498,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 498,
									"end": 518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 498,
									"end": 518,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 471,
									"end": 519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 471,
									"end": 519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 471,
									"end": 519,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 143,
									"end": 852,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 143,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 852,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204139bd27e248c5426d8078751c8dcca58618599e77b37965a273015054c7ccf664736f6c63430008110033",
									".code": [
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "3D9A3479"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "BE7DFF1D"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "D8CB55E3"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 165,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 165,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 165,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 637,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 637,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 637,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 532,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 532,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 165,
											"end": 207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 637,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 785,
											"end": 789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 785,
											"end": 796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 780,
											"end": 782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 780,
											"end": 796,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 798,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 832,
											"end": 842,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 843,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 815,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 532,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 603,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 613,
											"end": 623,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 624,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 596,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 596,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 532,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1801,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1950,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1951,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2103,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1987,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2051,
											"end": 2097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2077,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2097,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2051,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2242,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2109,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2175,
											"end": 2191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2175,
											"end": 2191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2192,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2236,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2192,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2381,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2248,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2369,
											"end": 2374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2340,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2375,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2340,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2381,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2536,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2387,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2483,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2481,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2713,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2723,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2881,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2804,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2804,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2898,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 3009,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3123,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3021,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3106,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3123,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3129,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3254,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3596,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3315,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3398,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3511,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3536,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3471,
											"end": 3559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3539,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3559,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3471,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3731,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3602,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3663,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3692,
											"end": 3725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3692,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3737,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3923,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3890,
											"end": 3946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3926,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3890,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3981,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4165,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4331,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4331,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4395,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4331,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4315,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4396,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4315,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4421,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4443,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4479,
											"end": 4483,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4484,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4520,
											"end": 4537,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4564,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4669,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4547,
											"end": 4669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4580,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4669,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4547,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4712,
											"end": 4718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4719,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4816,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4849,
											"end": 4852,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4816,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4816,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4816,
											"end": 4853,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4816,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4729,
											"end": 4743,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4678,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5055,
											"end": 5134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5179,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5197,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5291,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5197,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5004,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 5297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5422,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5434,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5407,
											"end": 5439,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5523,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5404,
											"end": 5523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5442,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5442,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5521,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5442,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5523,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5404,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5562,
											"end": 5593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5642,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5806,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5747,
											"end": 5825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5825,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5747,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5982,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5848,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5974,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6107,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6157,
											"end": 6186,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6157,
											"end": 6186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6350,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6198,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6464,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 6356,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6451,
											"end": 6456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6433,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6457,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6433,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6609,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6470,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6596,
											"end": 6601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6556,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6602,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6556,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6544,
											"end": 6603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 7144,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6647,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6778,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6769,
											"end": 6772,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 6865,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6878,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6878,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 6878,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6878,
											"end": 6941,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6878,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7121,
											"end": 7125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7116,
											"end": 7119,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7055,
											"end": 7127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7127,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7055,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6743,
											"end": 7144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 7144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 7144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 7144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7259,
											"end": 7269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7362,
											"end": 7365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7280,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7366,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7280,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7415,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7541,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7749,
											"end": 7752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7846,
											"end": 7851,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7778,
											"end": 7852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7962,
											"end": 7965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7868,
											"end": 7974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7974,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7868,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7861,
											"end": 7974,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7861,
											"end": 7974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8068,
											"end": 8073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7998,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8074,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7998,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8097,
											"end": 8104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8135,
											"end": 8136,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8132,
											"end": 8145,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8208,
											"end": 8221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8340,
											"end": 8343,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8325,
											"end": 8338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 8241,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8344,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8241,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8234,
											"end": 8344,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 8234,
											"end": 8344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 8367,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8447,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 8367,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8153,
											"end": 8162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8113,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8473,
											"end": 8476,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7754,
											"end": 8482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7754,
											"end": 8482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7754,
											"end": 8482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 8482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8671,
											"end": 8675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8698,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8744,
											"end": 8745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8929,
											"end": 8933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 8786,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8934,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8786,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8947,
											"end": 9127,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 8947,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9072,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8992,
											"end": 8993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9082,
											"end": 9097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9116,
											"end": 9120,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9121,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9366,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 9133,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9172,
											"end": 9175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9213,
											"end": 9218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 9195,
											"end": 9219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9219,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9195,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9186,
											"end": 9219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9186,
											"end": 9219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9241,
											"end": 9307,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9234,
											"end": 9239,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9231,
											"end": 9308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9228,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9228,
											"end": 9331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 9311,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9228,
											"end": 9331,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9228,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9358,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9351,
											"end": 9356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9347,
											"end": 9360,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"battle.sol",
								"battleDeclaration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"applyBattleSquad(uint256[])": "be7dff1d",
							"getNfts()": "d8cb55e3",
							"ownedNfts(address,uint256)": "3d9a3479"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nfts\",\"type\":\"uint256[]\"}],\"name\":\"applyBattleSquad\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum NftType\",\"name\":\"nftType\",\"type\":\"uint8\"}],\"internalType\":\"struct Nft[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum NftType\",\"name\":\"nftType\",\"type\":\"uint8\"}],\"internalType\":\"struct Nft[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedNfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum NftType\",\"name\":\"nftType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"battle.sol\":\"Battle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"battle.sol\":{\"keccak256\":\"0x72b324643c61071d7fd9e953c7bb6339d97be9b1c212cebe227e24fe1118f7da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8abc8784c94fd7b4722f6829745881b370b9ca1714245210701c47a2d3eff98\",\"dweb:/ipfs/QmSqv3fW6YuPnNRMfyRHRQydcKb5xnMkwG3uFwF2DTaUXP\"]},\"battleDeclaration.sol\":{\"keccak256\":\"0xaa830e155a693eab3ef33739b21d3b854d7ecfa0e31243fca084c53f5ad03b9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ade5302fb5e8c542350524ea22ddde9ff8f7289938def9f32e6c604b8ccc15ad\",\"dweb:/ipfs/QmRWoWqW1ouPMNZ3dhNGjxM6U6CxG5bucg5HhN7izJgSWN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 339,
								"contract": "battle.sol:Battle",
								"label": "ownedNfts",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_array(t_struct(Nft)458_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Nft)458_storage)dyn_storage": {
								"base": "t_struct(Nft)458_storage",
								"encoding": "dynamic_array",
								"label": "struct Nft[]",
								"numberOfBytes": "32"
							},
							"t_enum(NftType)452": {
								"encoding": "inplace",
								"label": "enum NftType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Nft)458_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Nft[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Nft)458_storage)dyn_storage"
							},
							"t_struct(Nft)458_storage": {
								"encoding": "inplace",
								"label": "struct Nft",
								"members": [
									{
										"astId": 454,
										"contract": "battle.sol:Battle",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 457,
										"contract": "battle.sol:Battle",
										"label": "nftType",
										"offset": 0,
										"slot": "1",
										"type": "t_enum(NftType)452"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Address",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1241:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1458:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:0"
									},
									"scope": 329,
									"src": "1175:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2483:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2596:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2618:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2431:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 329,
									"src": "2412:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3555:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3594:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3602:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "3572:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "3565:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:0"
									},
									"scope": 329,
									"src": "3466:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "4020:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "4076:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4037:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "4030:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3904:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3928:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3955:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4006:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:0"
									},
									"scope": 329,
									"src": "3873:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4601:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4618:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4611:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4498:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4522:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4587:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:0"
									},
									"scope": 329,
									"src": "4458:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "5139:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5182:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5241:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5255:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5282:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5301:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "5365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5374:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5386:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5330:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "5323:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5051:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5074:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5125:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:0"
									},
									"scope": 329,
									"src": "4960:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5683:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5727:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "5700:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "5693:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5627:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5669:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:0"
									},
									"scope": 329,
									"src": "5583:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6122:168:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6133:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6192:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6174:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6258:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6270:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6214:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "6207:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6001:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6025:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6108:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:0"
									},
									"scope": 329,
									"src": "5964:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6566:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "6583:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "6576:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6499:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6515:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6552:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:0"
									},
									"scope": 329,
									"src": "6469:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "7008:170:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7019:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7033:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7129:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7146:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7158:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7102:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "7095:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "6892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "6916:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "6943:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "6994:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:0"
									},
									"scope": 329,
									"src": "6853:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7660:434:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "8030:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "8052:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8064:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8044:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7670:418:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7683:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7701:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "7697:286:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "7725:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "7927:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "7916:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "7996:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7535:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7557:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7590:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7646:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:0"
									},
									"scope": 329,
									"src": "7466:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8475:135:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "8489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "8546:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8568:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8580:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "8485:119:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "8498:42:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8519:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "8512:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8372:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8405:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8461:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:0"
									},
									"scope": 329,
									"src": "8315:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "8699:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "8775:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "9105:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9126:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "8771:379:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "8798:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "8947:142:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8633:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8658:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:0"
									},
									"scope": 329,
									"src": "8616:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 330,
							"src": "194:8964:0",
							"usedErrors": []
						}
					],
					"src": "101:9058:0"
				},
				"id": 0
			},
			"battle.sol": {
				"ast": {
					"absolutePath": "battle.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Battle": [
							446
						],
						"BattleSlot": [
							465
						],
						"Nft": [
							458
						],
						"NftType": [
							452
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 330,
							"src": "58:51:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "battleDeclaration.sol",
							"file": "battleDeclaration.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 466,
							"src": "110:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Battle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "Battle",
							"nameLocation": "152:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3d9a3479",
									"id": 339,
									"mutability": "mutable",
									"name": "ownedNfts",
									"nameLocation": "198:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 446,
									"src": "165:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Nft[])"
									},
									"typeName": {
										"id": 338,
										"keyType": {
											"id": 334,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "173:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "165:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Nft[])"
										},
										"valueType": {
											"baseType": {
												"id": 336,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 335,
													"name": "Nft",
													"nameLocations": [
														"184:3:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 458,
													"src": "184:3:1"
												},
												"referencedDeclaration": 458,
												"src": "184:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Nft_$458_storage_ptr",
													"typeString": "struct Nft"
												}
											},
											"id": 337,
											"nodeType": "ArrayTypeName",
											"src": "184:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr",
												"typeString": "struct Nft[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "229:297:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "270:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"expression": {
																		"id": 349,
																		"name": "NftType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "273:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NftType_$452_$",
																			"typeString": "type(enum NftType)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "281:4:1",
																	"memberName": "Unit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "273:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																],
																"id": 347,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "266:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Nft_$458_storage_ptr_$",
																	"typeString": "type(struct Nft storage pointer)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "266:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 342,
																"name": "ownedNfts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "239:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
																}
															},
															"id": 345,
															"indexExpression": {
																"expression": {
																	"id": 343,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "249:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "253:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "249:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "239:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
																"typeString": "struct Nft storage ref[] storage ref"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "261:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "239:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$_t_struct$_Nft_$458_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Nft storage ref[] storage pointer,struct Nft storage ref)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "239:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "239:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "328:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"expression": {
																		"id": 361,
																		"name": "NftType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "331:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NftType_$452_$",
																			"typeString": "type(enum NftType)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "339:4:1",
																	"memberName": "Unit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "331:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																],
																"id": 359,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "324:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Nft_$458_storage_ptr_$",
																	"typeString": "type(struct Nft storage pointer)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "324:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 354,
																"name": "ownedNfts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "297:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
																}
															},
															"id": 357,
															"indexExpression": {
																"expression": {
																	"id": 355,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "307:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "311:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "307:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "297:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
																"typeString": "struct Nft storage ref[] storage ref"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "319:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "297:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$_t_struct$_Nft_$458_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Nft storage ref[] storage pointer,struct Nft storage ref)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "297:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "297:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "386:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"expression": {
																		"id": 373,
																		"name": "NftType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "389:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NftType_$452_$",
																			"typeString": "type(enum NftType)"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "397:4:1",
																	"memberName": "Unit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "389:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																],
																"id": 371,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "382:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Nft_$458_storage_ptr_$",
																	"typeString": "type(struct Nft storage pointer)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 366,
																"name": "ownedNfts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "355:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
																}
															},
															"id": 369,
															"indexExpression": {
																"expression": {
																	"id": 367,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "365:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "369:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "365:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "355:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
																"typeString": "struct Nft storage ref[] storage ref"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "377:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "355:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$_t_struct$_Nft_$458_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Nft storage ref[] storage pointer,struct Nft storage ref)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "355:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "444:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"expression": {
																		"id": 385,
																		"name": "NftType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "447:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NftType_$452_$",
																			"typeString": "type(enum NftType)"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "455:4:1",
																	"memberName": "Unit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "447:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																],
																"id": 383,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "440:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Nft_$458_storage_ptr_$",
																	"typeString": "type(struct Nft storage pointer)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "440:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 378,
																"name": "ownedNfts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "413:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
																}
															},
															"id": 381,
															"indexExpression": {
																"expression": {
																	"id": 379,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "423:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "427:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "423:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "413:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
																"typeString": "struct Nft storage ref[] storage ref"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "435:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "413:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$_t_struct$_Nft_$458_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Nft storage ref[] storage pointer,struct Nft storage ref)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "413:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "413:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "502:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"expression": {
																		"id": 397,
																		"name": "NftType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "505:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NftType_$452_$",
																			"typeString": "type(enum NftType)"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "513:4:1",
																	"memberName": "Unit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "505:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_enum$_NftType_$452",
																		"typeString": "enum NftType"
																	}
																],
																"id": 395,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "498:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Nft_$458_storage_ptr_$",
																	"typeString": "type(struct Nft storage pointer)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "498:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Nft_$458_memory_ptr",
																"typeString": "struct Nft memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 390,
																"name": "ownedNfts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "471:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
																}
															},
															"id": 393,
															"indexExpression": {
																"expression": {
																	"id": 391,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "481:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "485:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "481:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "471:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
																"typeString": "struct Nft storage ref[] storage ref"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "493:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "471:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$_t_struct$_Nft_$458_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Nft storage ref[] storage pointer,struct Nft storage ref)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "471:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "471:48:1"
											}
										]
									},
									"id": 403,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:0:1"
									},
									"scope": 446,
									"src": "215:311:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "586:45:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 410,
														"name": "ownedNfts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "603:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
														}
													},
													"id": 413,
													"indexExpression": {
														"expression": {
															"id": 411,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "613:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "617:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "613:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "603:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
														"typeString": "struct Nft storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 409,
												"id": 414,
												"nodeType": "Return",
												"src": "596:28:1"
											}
										]
									},
									"functionSelector": "d8cb55e3",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNfts",
									"nameLocation": "541:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:2:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "572:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Nft[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 405,
															"name": "Nft",
															"nameLocations": [
																"572:3:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 458,
															"src": "572:3:1"
														},
														"referencedDeclaration": 458,
														"src": "572:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Nft_$458_storage_ptr",
															"typeString": "struct Nft"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "572:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr",
														"typeString": "struct Nft[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:14:1"
									},
									"scope": 446,
									"src": "532:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "749:101:1",
										"statements": [
											{
												"body": {
													"id": 437,
													"nodeType": "Block",
													"src": "804:2:1",
													"statements": []
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "780:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 431,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "785:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "790:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "785:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "780:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"initializationExpression": {
													"assignments": [
														427
													],
													"declarations": [
														{
															"constant": false,
															"id": 427,
															"mutability": "mutable",
															"name": "_i",
															"nameLocation": "772:2:1",
															"nodeType": "VariableDeclaration",
															"scope": 438,
															"src": "764:10:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 426,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 429,
													"initialValue": {
														"hexValue": "30",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "777:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "764:14:1"
												},
												"loopExpression": {
													"expression": {
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "798:4:1",
														"subExpression": {
															"id": 434,
															"name": "_i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "798:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 436,
													"nodeType": "ExpressionStatement",
													"src": "798:4:1"
												},
												"nodeType": "ForStatement",
												"src": "759:47:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 439,
														"name": "ownedNfts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "822:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Nft_$458_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct Nft storage ref[] storage ref)"
														}
													},
													"id": 442,
													"indexExpression": {
														"expression": {
															"id": 440,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "832:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "836:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "832:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "822:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage",
														"typeString": "struct Nft storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 425,
												"id": 443,
												"nodeType": "Return",
												"src": "815:28:1"
											}
										]
									},
									"functionSelector": "be7dff1d",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "applyBattleSquad",
									"nameLocation": "646:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "nfts",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "663:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 417,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 418,
													"nodeType": "ArrayTypeName",
													"src": "663:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:23:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "731:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Nft_$458_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Nft[]"
												},
												"typeName": {
													"baseType": {
														"id": 422,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 421,
															"name": "Nft",
															"nameLocations": [
																"731:3:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 458,
															"src": "731:3:1"
														},
														"referencedDeclaration": 458,
														"src": "731:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Nft_$458_storage_ptr",
															"typeString": "struct Nft"
														}
													},
													"id": 423,
													"nodeType": "ArrayTypeName",
													"src": "731:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr",
														"typeString": "struct Nft[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:14:1"
									},
									"scope": 446,
									"src": "637:213:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 447,
							"src": "143:709:1",
							"usedErrors": []
						}
					],
					"src": "32:821:1"
				},
				"id": 1
			},
			"battleDeclaration.sol": {
				"ast": {
					"absolutePath": "battleDeclaration.sol",
					"exportedSymbols": {
						"BattleSlot": [
							465
						],
						"Nft": [
							458
						],
						"NftType": [
							452
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"canonicalName": "NftType",
							"id": 452,
							"members": [
								{
									"id": 449,
									"name": "Unit",
									"nameLocation": "119:4:2",
									"nodeType": "EnumValue",
									"src": "119:4:2"
								},
								{
									"id": 450,
									"name": "Weapon",
									"nameLocation": "129:6:2",
									"nodeType": "EnumValue",
									"src": "129:6:2"
								},
								{
									"id": 451,
									"name": "Helmet",
									"nameLocation": "141:6:2",
									"nodeType": "EnumValue",
									"src": "141:6:2"
								}
							],
							"name": "NftType",
							"nameLocation": "105:7:2",
							"nodeType": "EnumDefinition",
							"src": "100:49:2"
						},
						{
							"canonicalName": "Nft",
							"id": 458,
							"members": [
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "176:2:2",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "168:10:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 453,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "nftType",
									"nameLocation": "192:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "184:15:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_NftType_$452",
										"typeString": "enum NftType"
									},
									"typeName": {
										"id": 456,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 455,
											"name": "NftType",
											"nameLocations": [
												"184:7:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 452,
											"src": "184:7:2"
										},
										"referencedDeclaration": 452,
										"src": "184:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_NftType_$452",
											"typeString": "enum NftType"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Nft",
							"nameLocation": "158:3:2",
							"nodeType": "StructDefinition",
							"scope": 466,
							"src": "151:51:2",
							"visibility": "public"
						},
						{
							"canonicalName": "BattleSlot",
							"id": 465,
							"members": [
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "236:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "228:13:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 459,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "nftType",
									"nameLocation": "253:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "247:13:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr",
										"typeString": "struct Nft[]"
									},
									"typeName": {
										"baseType": {
											"id": 462,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 461,
												"name": "Nft",
												"nameLocations": [
													"247:3:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "247:3:2"
											},
											"referencedDeclaration": 458,
											"src": "247:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Nft_$458_storage_ptr",
												"typeString": "struct Nft"
											}
										},
										"id": 463,
										"nodeType": "ArrayTypeName",
										"src": "247:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Nft_$458_storage_$dyn_storage_ptr",
											"typeString": "struct Nft[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "BattleSlot",
							"nameLocation": "211:10:2",
							"nodeType": "StructDefinition",
							"scope": 466,
							"src": "204:59:2",
							"visibility": "public"
						}
					],
					"src": "32:232:2"
				},
				"id": 2
			}
		}
	}
}